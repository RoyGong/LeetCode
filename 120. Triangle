class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        if (triangle.size() == 1) return triangle.get(0).get(0);
        int n = triangle.size();
        
        // Using only O(n) extra space
        int[] dp = new int[n];
        
        // 先算出最底层的值
        for(int j = 0; j< triangle.get(n-1).size(); j++){
            dp[j] = triangle.get(n - 1).get(j);
        }
        
        // 自底向上
        for(int i = n-2; i >= 0; i--){
            for(int j = 0; j <= i; j++){
                dp[j] = Math.min(dp[j], dp[j + 1]) + triangle.get(i).get(j);
            }
        }

        return dp[0];
    }
}
