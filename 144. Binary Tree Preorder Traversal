/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        ArrayList<Integer> result = new ArrayList<Integer>();
//         helper(root, result);
//         return result;
//     }
    
//     private void helper(TreeNode root, ArrayList<Integer> result) {
//         if(root == null){
//             return;
//         }
        
//         result.add(root.val);
//         helper(root.left, result);
//         helper(root.right, result);
        
//         // return;
        if(root == null) return result;
        
        Stack<TreeNode> stack = new Stack<>();
        stack.push(root);
        
        while(!stack.empty()){
            TreeNode temp = stack.pop();
            result.add(temp.val);
            if(temp.right != null) stack.push(temp.right);
            if(temp.left != null) stack.push(temp.left);
        }
        return result;
    }
}
