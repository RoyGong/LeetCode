class Solution {
    
    private static int[][] neighbors = new int[][]{{1, 0}, {1, 1}, {0, 1}, {-1, 1}, {-1, 0}, {-1, -1}, {0, -1}, {1, -1}};
    
    public void gameOfLife(int[][] board) {
        int h = board.length;
        if(h == 0) return;
        int w = board[0].length;
        
        for(int i = 0; i < h; i++){
            for(int j = 0; j < w; j++){
                int count = 0;
                for(int[] k : neighbors){
                    if(valid(board, i + k[0], j + k[1]) && board[i + k[0]][j + k[1]]%2 == 1) count++; 
                }
                if(board[i][j] == 0 && count == 3) board[i][j] = 2;
                else if(board[i][j] == 1 && (count < 2 || count > 3)) board[i][j] = 3;
            }
        }
        
        for(int i = 0; i < h; i++){
            for(int j = 0; j < w; j++){
                if(board[i][j] == 2) board[i][j] = 1;
                else if(board[i][j] == 3) board[i][j] = 0;
            }
        }
        
    }
    
    private boolean valid(int[][] board, int i, int j){
        int h = board.length;
        if(i < 0 || i > h-1) return false;
        int w = board[0].length;
        if(j < 0 || j > w-1) return false;
        return true;
    }

}
