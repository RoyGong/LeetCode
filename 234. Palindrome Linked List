/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        
        if(head == null || head.next == null) return true; 
        
        ListNode fast = head;
        ListNode slow = head;
        Stack<Integer> stack = new Stack<>();
        
        while(fast != null && fast.next != null){
            stack.push(slow.val);
            // System.out.println(stack.peek());
            fast = fast.next.next;
            slow = slow.next;
        }
        
        if(fast != null) slow = slow.next;
                
        while(slow != null ){
            System.out.println(slow.val + " vs " + stack.peek());
            if(slow.val != (int) stack.pop()) return false;
            slow = slow.next;
        }
        
        return true;
    }
}
