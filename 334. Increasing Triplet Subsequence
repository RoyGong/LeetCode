class Solution {
    public boolean increasingTriplet(int[] nums) {
        if(nums.length < 3) return false;
        
        int min1 = nums[0];
        int min2 = 0;
        int i = 0;
        for(; i < nums.length; i++){
            if(nums[i] > min1) {
                min2 = nums[i];
                break;
            }
            else{
                min1 = nums[i];
            }
        }
        
        for(; i < nums.length; i++){
            if(nums[i] <= min1) min1 = nums[i];
            else if(nums[i] <= min2) min2 = nums[i];
            else return true;
        }
        
        return false;
        
        // // O(n2) complexity is not competitive
        // int flag;
        // for(int i = 1; i < nums.length - 1; i++){
        //     flag = 0;
        //     for(int l = i-1; l >= 0; l--)
        //         if(nums[l] < nums[i]){
        //             flag++;
        //             break;
        //         }
        //     for(int r = i+1; r < nums.length; r++)
        //         if(nums[r] > nums[i]){
        //             flag++;
        //             break;
        //         }
        //     if(flag == 2) return true;
        // }
        // return false;
    }
}
