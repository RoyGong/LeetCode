class Solution {
    public int integerReplacement(int n) {
//         int k = 0;
//         while(n >> k != 0) k++;
//         int max = 1 << k;
//         int[] dp = new int[max+1];
//         dp[1] = 0;
//         dp[2] = 1;
        
//         for(int i = 2; i < max; i = i << 1){
//             for(int j = i+2; j <= (i << 1); j += 2) dp[j] = dp[j/2] + 1;
//             for(int j = i+1; j < (i << 1); j += 2) dp[j] = Math.min(dp[j+1], dp[j-1]) + 1;
//         }
        
//         // for(int i = 0; i < max; i++) System.out.println("dp[" + i + "] = " + dp[i]);
//         return dp[n];
        
        int count = 0;
        
        if(n == 2147483647) {
            n = n - 1;
            n = n / 2;
            n = n + 1;
            count = 2;
        }
        
        while(n > 1){
            if(n%2 == 0){
                n = n >> 1;
            }
            else if(n == 3 || ((n >> 1) & 1) == 0){
                n = n-1;
            }
            else{
                n = n+1;
            }
            count++;
        }
        return count;
    }
}
