/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        //corner case
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        
        ListNode head = new ListNode(0);
        ListNode node = head;
        ListNode temp1 = l1;
        ListNode temp2 = l2;   
        int sum = 0;
        
        while(temp1 != null || temp2 != null){
            if(temp1 != null) {
                sum += temp1.val;
                temp1 = temp1.next;
            }
            if(temp2 != null) {
                sum += temp2.val;
                temp2 = temp2.next;
            }
            ListNode curr = new ListNode(sum%10);
            node.next = curr;
            node = node.next;
            sum = sum/10;
        }
        
        if(sum == 1){
            node.next = new ListNode(1);
        } 
            
        return head.next;
    }
}
