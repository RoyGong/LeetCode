/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    private int maxLen = 0;
    
    public int longestUnivaluePath(TreeNode root) {
        if(root == null || root.left == null && root.right == null) return 0;
        int len = 0;
        helper(root);
        return maxLen;
    }
    
    private int helper(TreeNode node){
        if(node == null) return 0;
        int left = 0;
        int right = 0;
        if(node.left != null && node.left.val == node.val) left = helper(node.left) + 1;
        else helper(node.left);
        if(node.right != null && node.right.val == node.val) right = helper(node.right) + 1;
        else helper(node.right);
        maxLen = Math.max(maxLen, left + right);
        
        return Math.max(left, right);
    }
}

