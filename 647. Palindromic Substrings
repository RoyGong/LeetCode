class Solution {
    public int countSubstrings(String s) {

        int len = s.length();
        
        if(len == 0) return 0;
        
        int count = 0;
        
        // dp stores whether substring i to j is palindromic, if true count++
        boolean[][] dp = new boolean[len][len];
        for(int i = 0; i < len; i++){
            dp[i][i] = true;
            count += 1;
        }
        
        for(int i = 0; i < len-1; i++){
            dp[i][i+1] = s.charAt(i) == s.charAt(i+1);
            if(dp[i][i+1]) count += 1;
        }
        
        for(int l = 2; l < len; l++) {
            for(int i = 0; i < len-l; i++) {
                dp[i][i+l] = (s.charAt(i) == s.charAt(i+l) && dp[i + 1][i + l - 1]);
                if(dp[i][i+l]) count += 1;;
            }
        }
        
        return count;
    }
}
