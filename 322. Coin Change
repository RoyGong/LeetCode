class Solution {
    public int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount + 1];
        dp[0] = 0;    
        for(int curr = 1; curr < amount + 1; curr++){
            dp[curr] = Integer.MAX_VALUE;
            for(int i = 0; i < coins.length; i++){
                // note the condition: current amount - coin value >= 0 AND previous value is ACCESSIBLE !!!
                if(curr - coins[i] >= 0 && dp[curr - coins[i]] != Integer.MAX_VALUE) dp[curr] = Math.min(dp[curr], dp[curr - coins[i]] + 1);
            }
        }
        // note: common mistake here
        // return dp[amount + 1] == Integer.MAX_VALUE ? -1 : dp[amount + 1];
        if(dp[amount] == Integer.MAX_VALUE) return -1;
        else return dp[amount];
    }
}
