/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        // two pointers;
        
        // corner case;
        if(head == null || head.next == null) return null;
        
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode fast = dummy;
        ListNode slow = dummy;
        // slow.next = head;
        
        for(int i = 0; i < n; i++) fast = fast.next;
        
        
        while(fast != null && fast.next != null){
            fast = fast.next;
            slow = slow.next;
        }
        
        // this if can be removed if we denote slow.next=head rather than dummy.next = head
        if(fast == null) return dummy.next.next;
        slow.next = slow.next.next;
        return dummy.next;
    }
}
