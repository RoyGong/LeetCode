class Solution {
    public int calculate(String s) {
        int result = 0;
        // ArrayDeque<Character> stack = new ArrayDeque<>();
        ArrayDeque<Integer> stack = new ArrayDeque<>();
        
        int sign = 1;

        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);
            
            //处理数字
            if (Character.isDigit(ch)) {
                //注意ASCII转码
                int num = s.charAt(i) - '0';
                while (i + 1 < s.length() && Character.isDigit(s.charAt(i + 1))) {
                    int temp = s.charAt(++i) - '0';
                    num = num * 10 + temp;
                }
                result += num * sign;
            }
            //处理正负号
            else if(ch == '+') sign = 1;
            else if(ch == '-') sign = -1;
            //处理括号优先级
            else if(ch == '('){
                stack.push(result);
                stack.push(sign);
                result = 0;
                sign = 1;
            }
            else if(ch == ')'){
                sign = stack.pop();
                result = stack.pop() + sign * result;
            }
        }
        return result;
    }
}
